(load "2_12.scm")

(define center1 10)
(define center2 5)

(define (close-enough? a b)
  (if (< (abs (- a b)) 0.0001)
    #t
    #f))

(define (find-ans)
  (define (dis-interval x y)
    (display "interval1: ")
    (print-interval x)
    (display "percent: ")
    (define perx (percent x))
    (display perx)
    (newline)
    (display "interval2: ")
    (print-interval y)
    (display "percent: ")
    (define pery (percent y))
    (display pery)
    (newline)
    (display "inter1 * inter2: ")
    (define mul-ans (mul-interval x y))
    (print-interval mul-ans)
    (display "percent: ")
    (define permul (percent mul-ans))
    (display (percent mul-ans))
    (newline)
    (display "percent x + percent y = percent mul-interval? ")
    (display (close-enough? (+ perx pery) permul))
    (newline)
    (newline))
  (define (iter p)
    (if (< p 0.1)
      0
      (begin (dis-interval (make-center-percent center1 p)
                           (make-center-percent center2 p))
             (iter (- p 0.05)))))
  (iter 1.25))
(find-ans)

; we will find that when percent < 0.8, then (percent x) + (percent y) = (percent (* x y))
