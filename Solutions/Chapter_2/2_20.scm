(define (same-parity x . y)
  (define (filter-same f alist)
    (if (null? alist)
      '()
      (if (f (car alist))
        (cons (car alist) (filter-same f (cdr alist)))
        (filter-same f (cdr alist)))))
  (if (even? x)
    (cons x (filter-same (lambda (x) (even? x)) y))
    (cons x (filter-same (lambda (x) (odd? x)) y))))

(newline)
(display "(same-parity 1 2 3 4 5 6 7)")
(newline)
(display "result: ")
(display (same-parity 1 2 3 4 5 6 7))
(newline)
(display "(same-parity 2 3 4 5 6 7)")
(newline)
(display "result: ")
(display (same-parity 2 3 4 5 6 7))
